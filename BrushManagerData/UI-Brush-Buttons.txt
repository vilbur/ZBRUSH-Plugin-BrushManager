
[IPalette, $PLUGIN_NENU ]
//[ISubPalette, [StrMerge, $PLUGIN_NENU, ":", $PLUGIN_SUBMENU ]]

[VarSet, button_size, 64 ]


/** STANDARD | CLAY
  */
[IButton, [StrMerge, $CONTROLS_PATH, "Test" ],"Brushes: STANDARD | CLAY",

	[If, ! [MemGetSize, STANDARD_BRUSHES_MEMBLOCK]
	, //  create memory block

		[MemCreate, STANDARD_BRUSHES_MEMBLOCK, 1024 /* size */ ]

		[MemWriteString, STANDARD_BRUSHES_MEMBLOCK, "", 0] // store last brush
		[MemWriteString, STANDARD_BRUSHES_MEMBLOCK, "Standard", 32]
		[MemWriteString, STANDARD_BRUSHES_MEMBLOCK, "Clay", 64]
		//[MemWriteString, STANDARD_BRUSHES_MEMBLOCK, "Pinch", 96]
	]

	[RoutineCall, circleBrushes,STANDARD_BRUSHES_MEMBLOCK, 2]

,,[Var, button_size],,[StrMerge, $PLUGIN_DATA_PATH, "\Icons\standard.psd"], [Var, button_size]]




/** TRIM | FLATTEN | PALNAR
  */
[IButton, [StrMerge, $CONTROLS_PATH, "Planar" ],"Brushes: TRIM | FLATTEN | PALNAR",

	[If, ! [MemGetSize, FLAT_BRUSHES_MEMBLOCK]
	, //  create memory block

		[MemCreate, FLAT_BRUSHES_MEMBLOCK, 1024 /* size */ ]

		[MemWriteString, FLAT_BRUSHES_MEMBLOCK, "", 0] // store last brush
		[MemWriteString, FLAT_BRUSHES_MEMBLOCK, "TrimDynamic", 32]
		[MemWriteString, FLAT_BRUSHES_MEMBLOCK, "Flatten", 64]
		[MemWriteString, FLAT_BRUSHES_MEMBLOCK, "Planar", 96]
	]

	[RoutineCall, circleBrushes, FLAT_BRUSHES_MEMBLOCK, 3]

,,[Var, button_size],,[StrMerge, $PLUGIN_DATA_PATH, "\Icons\Planar.psd"], [Var, button_size]]




/** MOVE | MOVE TOPOLOGICAL
  */
[IButton, [StrMerge, $CONTROLS_PATH, "Move" ],"Brushes: MOVE | MOVE TOPOLOGICAL",

	[If, ! [MemGetSize, MOVE_BRUSHES_MEMBLOCK]
	, //  create memory block

		[MemCreate, MOVE_BRUSHES_MEMBLOCK, 1024 /* size */ ]

		[MemWriteString, MOVE_BRUSHES_MEMBLOCK, "", 0] // store last brush
		[MemWriteString, MOVE_BRUSHES_MEMBLOCK, "Move", 32]
		[MemWriteString, MOVE_BRUSHES_MEMBLOCK, "Move Topological", 64]
	]

	[RoutineCall, circleBrushes, MOVE_BRUSHES_MEMBLOCK, 2]

,,[Var, button_size],,[StrMerge, $PLUGIN_DATA_PATH, "\Icons\Move.psd"], [Var, button_size]]




/** SMOOTH | SMOOTH PEAKS | SMOOTH VALLEYS | SMOOTH STRONGER
  */
[IButton, [StrMerge, $CONTROLS_PATH, "Smooth" ],"Brushes: SMOOTH | SMOOTH PEAKS | SMOOTH VALLEYS | SMOOTH STRONGER",

	[If, ! [MemGetSize, SMOOTH_BRUSHES_MEMBLOCK]
	, //  create memory block

		/* LOAD CUSTOM BRUSH */
		[FileNameSetNext,"ZBRUSH_ZBrushes\Smooth\Smooth Stronger.ZBP"]
		[IPress,Brush:Load Brush]

		[FileNameSetNext,"ZBRUSH_ZBrushes\Smooth\SmoothDirectional.ZBP"]
		[IPress,Brush:Load Brush]



		[MemCreate, SMOOTH_BRUSHES_MEMBLOCK, 1024 /* size */ ]

		[MemWriteString, SMOOTH_BRUSHES_MEMBLOCK, "", 0] // store last brush
		[MemWriteString, SMOOTH_BRUSHES_MEMBLOCK, "Smooth", 32]
		[MemWriteString, SMOOTH_BRUSHES_MEMBLOCK, "SmoothValleys", 64]
		[MemWriteString, SMOOTH_BRUSHES_MEMBLOCK, "SmoothPeaks", 96]
		[MemWriteString, SMOOTH_BRUSHES_MEMBLOCK, "Smooth Stronger", 128]
		[MemWriteString, SMOOTH_BRUSHES_MEMBLOCK, "SmoothDirectional", 160]
	]

	[RoutineCall, circleBrushes, SMOOTH_BRUSHES_MEMBLOCK, 5]

,,[Var, button_size],,[StrMerge, $PLUGIN_DATA_PATH, "\Icons\Smooth.psd"], [Var, button_size]]


/** PINCH | MAGNIFY | DAM STANDARD
  */
[IButton, [StrMerge, $CONTROLS_PATH, "Pinch" ],"Brushes: PINCH | MAGNIFY | DAM STANDARD",

	[If, ! [MemGetSize, PINCH_BRUSHES_MEMBLOCK]
	, //  create memory block

		[MemCreate, PINCH_BRUSHES_MEMBLOCK, 1024 /* size */ ]

		[MemWriteString, PINCH_BRUSHES_MEMBLOCK, "", 0] // store last brush
		[MemWriteString, PINCH_BRUSHES_MEMBLOCK, "Pinch", 32]
		[MemWriteString, PINCH_BRUSHES_MEMBLOCK, "Magnify", 64]
		[MemWriteString, PINCH_BRUSHES_MEMBLOCK, "DamStandard", 96]
	]

	[RoutineCall, circleBrushes, PINCH_BRUSHES_MEMBLOCK, 3]

,,[Var, button_size],,[StrMerge, $PLUGIN_DATA_PATH, "\Icons\Pinch.psd"], [Var, button_size]]


/** MASK RECTANGLE | MASK PEN | MASK LASSO
  */
[IButton, [StrMerge, $CONTROLS_PATH, "Mask" ],"Brushes: MASK RECTANGLE | MASK PEN | MASK LASSO",

	[If, ! [MemGetSize, MASK_BRUSHES_MEMBLOCK]
	, //  create memory block

		[MemCreate, MASK_BRUSHES_MEMBLOCK, 1024 /* size */ ]

		[MemWriteString, MASK_BRUSHES_MEMBLOCK, "", 0] // store last brush
		[MemWriteString, MASK_BRUSHES_MEMBLOCK, "MaskRect", 32]
		[MemWriteString, MASK_BRUSHES_MEMBLOCK, "MaskPen", 64]
		[MemWriteString, MASK_BRUSHES_MEMBLOCK, "MaskLasso", 96]
	]

	[RoutineCall, circleBrushes, MASK_BRUSHES_MEMBLOCK, 3]

,,[Var, button_size],,[StrMerge, $PLUGIN_DATA_PATH, "\Icons\Mask.psd"], [Var, button_size]]


/** TRANSPOSE | TRANSPOSE SMART
  */
[IButton, [StrMerge, $CONTROLS_PATH, "Transpose" ],"Brushes: TRANSPOSE | TRANSPOSE SMART",

	[If, ! [MemGetSize, TRANSPOSE_BRUSHES_MEMBLOCK]
	, //  create memory block

		[MemCreate, TRANSPOSE_BRUSHES_MEMBLOCK, 1024 /* size */ ]

		[MemWriteString, TRANSPOSE_BRUSHES_MEMBLOCK, "", 0] // store last brush
		[MemWriteString, TRANSPOSE_BRUSHES_MEMBLOCK, "Transpose", 32]
		[MemWriteString, TRANSPOSE_BRUSHES_MEMBLOCK, "TransposeSmart", #button_size]
	]

	[RoutineCall, circleBrushes, TRANSPOSE_BRUSHES_MEMBLOCK, 2]

,, [Var, button_size],,[StrMerge, $PLUGIN_DATA_PATH, "\Icons\Transpose.psd"],  [Var, button_size]]

//
//[IButton, [StrMerge, $CONTROLS_PATH, $PLUGIN_NAME, "Delete memory" ], "Tooltip"
//,
//	[MemDelete, STANDARD_BRUSHES_MEMBLOCK]
//	[MemDelete, FLAT_BRUSHES_MEMBLOCK]
//	[MemDelete, SMOOTH_BRUSHES_MEMBLOCK]
//
//
//,,56,,[StrMerge, $PLUGIN_NENU, "\Icons\standard.psd"], [Var, button_size]]
//
//
